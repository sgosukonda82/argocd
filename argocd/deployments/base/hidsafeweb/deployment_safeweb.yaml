apiVersion: apps/v1
kind: Deployment
metadata:
  name: hidsafeweb
  namespace: ''
  labels:
    namespace-name: ''
    deployment-env: ''
    deployment-instance: ''
    enable-hidsafeweb: ''
spec:
  replicas: 3
  selector:
    matchLabels:
      app: hidsafeweb
      namespace-name: ''
      deployment-env: ''
      deployment-instance: ''
      enable-hidsafeweb: ''
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  minReadySeconds: 5
  template:
    metadata:
      labels:
        app: hidsafeweb
        namespace-name: ''
        deployment-env: ''
        deployment-instance: ''
        enable-hidsafeweb: ''
    spec:
      containers:
      - name: hidsafeweb
        image: hidsafeweb-image
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 5000
        - containerPort: 5001
        - containerPort: 22        
        resources:
          requests:
            cpu: 200m
            memory: 128Mi
          limits:
            cpu: 500m
            memory: 2048Mi            

---
apiVersion: v1
kind: Service
metadata:
  name: hidsafeweb
  namespace: ''
  labels:
    namespace-name: ''
    deployment-env: ''
    deployment-instance: ''
    enable-hidsafeweb: "y"
    enable-ext-ip-for-hidsafeweb: ''
    use-pool: ''
spec:
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 0
  selector:
    app: hidsafeweb
    namespace-name: ''
    deployment-env: ''
    deployment-instance: ''
  loadBalancerIP: ''
  ports:
    - protocol: TCP
      port: 80
      nodePort: 31680
      name: sweb-http-port
      targetPort: 5000
    - protocol: TCP
      port: 443
      nodePort: 31643
      name: sweb-https-port
      targetPort: 5001
    - protocol: TCP
      port: 5022
      nodePort: 31622      
      name: sweb-ssh-port
      targetPort: 22      
  type: LoadBalancer
  

#--Pushing the image to local repository to make it accessible to microk8s
#sudo buildah push --tls-verify=false hid.iams.unob.adn8.safeweb:<build tag> localhost:32000/safe/hid.iams.unob.adn8.safeweb:latest
#sudo buildah push --tls-verify=false hid.iams.unob.adn8.safeweb:<build tag> localhost:32000/safe/hid.iams.unob.adn8.safeweb:<build tag>
#Above must be done to ensure that we can alwys compare the sha hash for the image to determine which image is being used.